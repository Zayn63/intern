name: CI - Build & Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Checkout codename: CI - Build & Push Docker Image

# Trigger on push to main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup Docker Buildx (for building multi-platform images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3️⃣ Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4️⃣ Create an image tag (timestamp based)
      - name: Set image tag
        id: set_tag
        run: echo "::set-output name=tag::$(date +'%Y%m%d%H%M%S')"

      # 5️⃣ Build and push Docker image
      - name: Build and push Docker image
        run: docker buildx build -t ${{ secrets.DOCKER_USERNAME }}/strapi:${{ steps.set_tag.outputs.tag }} --push .

        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set image tag
        id: set_tag
        run: echo "::set-output name=tag::$(date +'%Y%m%d%H%M%S')"
        
      - name: Build and push Docker image
        run: docker buildx build -t ${{ secrets.DOCKER_USERNAME }}/strapi:${{ steps.set_tag.outputs.tag }} --push .
  

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/strapi:${{ steps.set_tag.outputs.tag }}

      - name: Save image tag for CD
        run: echo "image_tag=${{ steps.set_tag.outputs.tag }}" >> $GITHUB_ENV
